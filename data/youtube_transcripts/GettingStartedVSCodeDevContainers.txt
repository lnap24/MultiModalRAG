okay hello everybody all right so uh I'm going to try and make this video pretty quick we're going to work through some of these topics throughout the first week or so of the semester so not to worry but I'm going to walk you through kind of VSS code generally which I know you guys have been exposed to but I'm going to show you a couple of features there I'm going to show you Docker which you're going to need to download and have working locally on your computer it's really lightweight piece of software but we have to have that uh and then I'm going to show you how to fork and clone in the vs code environment you probably already done and then I'm going to show you the dev container environment which is a virtual environment that we'll be using for the class throughout the semester okay so uh first things first this the this window that you see in front of you is VSS code all right and so on the left you have a whole bunch of options relative to files you'll see that I have the uh GitHub uh Source here all right that's an extension so the first thing I want to do is focus F on the extensions now you may have already done this in systems but if you haven't first thing you should do um what you could vs code up and running is Type in Uva and look for the UVA data science core extension pack all right and you just and you just want to click on it and install them okay I already have it installed so uh if but but you if you don't it'll say install and then this is just a a bunch of packages that are really helpful um throughout the class to in everything from GitHub co-pilot which is the large language model for Microsoft anyway all of these packages that we selected and are going to be necessary in order to be able to get the virtual environment including these Dev containers all right to work correctly throughout the semester all right so a development container is just a virtual environment essentially it's just a this is just a piece of software that's a wrapper for a Docker container and a Docker container is just a way to compartmentalize your code your working environment your python distributions everything so it's not like you have one gigantic kind of uh working environment to rule them all what we want is to have individual tailored kind of virtual environments for each one of our projects okay and Dev containers through vs code allows you to do that really easily um and so but in order for that to work and I put a lot of this in the help documentation I think actually VSS code has better help documentation than you'll you'll get from me but you have to have Docker running so what you see here and we'll get to this in a minute is that these are all previous containers that I created um for vs code working environments and none of them are activated right now because I actually have I don't have a Dev container up and running all right so we're going to do that in a minute but before we get started Ed with any of that the two things you should do is definitely install these extension packs all right you probably want to install more over time and make sure that you've downloaded uh Docker all right so you have these two things running all right okay so first thing we're going to do is jump over to a uh and this is Spacey this is just a random repo that I pulled up that I'm going to fork and clone just to walk you through the example of how to do this it's a it's a text kind of an advanced kind of text T um analytics and LP package in Python all right so this is just your standard GitHub repo right so the first thing we're going to do and this what you want to do is you you want to go to the 3021 repo all right I've already I developed that repo so I can't fork and clone it all right so I'm just using Spacey as an example but this is what you're going to want to do for the 3021 repo that supports the class all right so the first thing you're going to do is you're going to go in and you again you've probably done this but just to as refresher create a fork all right and this will fork in assuming you're logged in which should be into your own GitHub account it'll Fork the name of the repo straight you can change it if you want to I think it's easier just to leave it as is and so it'll create a fork right into your uh into your GitHub working space all right that was pretty fast that's good all right and so now we see that I have this Spacey I have the Spacey repo inside my kind of tree right no volunteers is my handle and now I have Spacey here okay and you can always delete the fork if you want all right but the next thing uh we're going to do all right is we want to clone this repo that's now in uh you know based on our our GitHub online and we want to get a local version of it so we can use it in the classroom all right so we can use it you guys can use it on your local computer make changes upload files to it all of that okay so the first thing we're going to do is we're going to go over here to file and we're just going to do a new window right and again vs code makes a lot of this really easy all right and then you're just going to click on the Clone GitHub repo repository and it's going to pull up a window and ask for the URL and so the URL is located here you just copy this URL right this we're using the kind of um online protocol we just copy that we'll go back probably have to pull it up again a new file new window here we go probably have many windows up now yeah I do all right just get rid of one all right so here's our new um window we're just going to click on that and we just paste it in and then what it's going to do is ask us where we want that folder to be located all right you just call it whatever you want to call it oops oh it's cloning it okay I guess just going to call it Spacey all right all right sometimes takes a little bit of time hopefully it won't play too long you see the bar there it's cloning it's cloning it's cloning all right there we go yes let's open the repository please okay and then here you'll see that you have all the files right locally where um you still you let's just get r that all right all the files for this particular um GitHub repo and the same thing will happen for 3021 all right um so what we're going to do is I'm going to show you that example 3021 so I'm going to get rid of this all right uh get rid of this I'm just going to close it out all right then we're going to close this out all right then I guess I'll just do another I do a new window again all right and now because I've been uh working in this space It should pop up in my recent so here it is all right now notice before I open this it says Dev container okay so what I've done is I've I've developed a um a Docker file and a Dev container file a yaml file right in this repo already so when you clone it right assuming that you went through the steps that you did before where you had the the package extensions um from U designs to include the dev the um Dev container extension and desktop and this um I'm sorry Docker running as soon as you open this environment it will create automatic automatically create a virtual environment for you and a Docker container um all right so that's what it says it's doing there right now so it's connecting to the dev container and once we get it up and running I'll show you kind of the specification that it's using to do that all right and what we'll see right over here is that now we have activated right a container inside Docker desktop this is why you have to have this file locally it shows you kind of the CPU it kind of spikes and it goes down so we're using this one here all right so that environment is activated all right and we can see that down here in our terminal right so we're no longer kind of working get rid of this all right see here no longer working in our um you know kind of local file tree all right now we're inside this container right and that's why it's called workplace vs code workplace no matter what um particular um container you're using it will always say workplace and then it will have the name of the of the root file there and so this is our and this is all done with two basically two um well just with one file here okay so it's it's done because of this Dev container Json file so this is all written in Json if you don't know Json that's fine I don't know Json very well either all right but this is like a standard um Docker container available inside um uh vs code environment inside this extension so we just selected the Python 3 development container and it and it built it for us all right and so now we have this fully functional contained virtual environment all right and we can begin to uh use it throughout the semester and what you'll see is you'll have all of the all the files just like this you should see them in your file tree all right I'm going to clean a lot of this up for beginning of the semester but you'll see a lot of these files here um from the 3021 repo and you can have access to them all right and now you can read and write back and forth um to your own uh GitHub repo your own cloned version your own fort version of this particular repo okay all right so again we're going to work on all this in great detail the first couple of weeks but I just wanted to show you how this is going to work the two key things again is just to make sure to have this Docker kind of downloaded and ready to go all right and then also have the extension pack in vs code and then when you forked and cloned the repo into your local space It should spin up this development container right away and then we don't have to worry about any issues associated with you know mismatching packages or um you know kind of operating environments everything will be the same for everybody it just makes it a lot easier okay that's it for now and uh looking forward to the semester and I'll see you all soon all right bye