okay I'm going to walk you guys how walk you through how to create a requirements document and maintain it inside the vs code environment all right so I put these commands up in the online textbook this is what they look like so I'm just going to walk you through how to actually use them and the reason that we use them that would just be easier to have a little bit of video in case you guys wanted to access it okay so let me get rid of that we'll pull that back up in a minute this is my VSS code environment here okay so what you'll see um here on is a script called ml1 incl class all right you guys have this it's a python file but we're going to add some particular stuff to it to make it run like an IPython notebook which is these little chunks it adds these tags all right so I just ran this one piece of code here in the beginning all right and what we'll see we get kind of this classic error oh no no Pi data set all right that means we just don't have that particular package loaded into our working environment M for us to access okay so what we're going to do let me clear the terminal here clear that away all right this is our terminal down in the bottom okay and we're just going to run just pip install like we always do pip install P data set all right it's going to run all right executed flawlessly okay so now we have this installed in our environment all right so when we rerun this what we see this is going to work just fine all right so imported the packages that CH chunk of code worked great all right but for context let's get rid of this here all right for context what we want to look at is like to get a better idea for how um our environment is operating we could look at our requirements file all right so this requirements file documents all the packages that we have used inside this environment and their version number all right it might be they're all updated might be a certain version number has dependencies it just captures all the documentation that we've used which is great all right that's good useful information and the cool part about this is that I've built this in to your Dev container so when you start this environment this Dev container file you already have vs code will recognize that it exists as long as you have um Docker on your computer and it'll automatically start up this environment for you all right and the other thing it's going to do is it's automatically going to install your packages right that you need to make this work but post create command means something after the container is built it's just right once it's built the first thing you do load all these packages in okay but we have to maintain this throughout the semester because we will use many more packages than what is listed here all right this actually isn't that many okay so this is one example so we just loaded in this Pi data set and we want to make sure that they gets added to our requirements file right then we'll save that and then the next time we open up environement if we want to run this script again we won't have to import it all over again it'll just be there okay so what we're going to do is use this pip freeze command here okay so what this is going to do is it's just telling pip to take the current and current packages we have loaded essentially freezing them and write it into the requirements document all right so just hit enter takes like two seconds to load up and then if we take a look at our requirements text again all right we'll see that Pi data set has been added okay it is there where it was not before all right yay all right so now we know we need it and it's here and our container will loaded that's all a win-win all right so let's save that chunk it down and the other thing that you can do all right if you if you wanted to just prove you know that it's working or whatever is you can go here and you can go I don't want to do that oh where is it oh maybe too far back pip install requirements all right so what we're saying is just restall all the requirements that you see inside this all the packages you see inside this requirements file all right so we just hit enter and just go and it tell us everything is already required uh satisfied requirements already met already loaded everything in okay and that's it so we've updated our um requirements file okay so I did it a couple times but I think it's back to where it originally was so it might not see it see a change here on my GitHub but if it did you want to commit that change back to your repo but that should pretty much do it okay so that covers how to manage your requirements document right inside your repo using some of the tools that are already kind of built into the U Dev container okay thanks much